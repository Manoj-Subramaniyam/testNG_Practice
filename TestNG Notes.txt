TestNG- in Java file

@BeforeSuite
@BeforeTest
@BeforeClass
@BeforeMethod
@Test
@AfterMethod
@AfterClass
@AfterTest
@AfterSuite

----------------------------
in XML

Right click on the selected Classes --> convert to TestNG
<suite name="">
<test thread-count="2" parallel="classes">
<classes>
<class name="packagename.class">
</classes>

</test>
</suite>
--------------------------------
attributes

@Test Attributes

@Test(invocationCount=2) --> default value is 1
	Execute the Test two times, difference between the for loop and invocationCount is for loop will not execute second time when the first loop fails but invocationCount will execute the second time

@Test(timeOut=7000) 
	Maximum allowed time to Execute the one testcase
	Exception--> ThreadTimeoutException
@Test(invocationTimeOut=14000)
	Total allowed time to complete the Testcases

@Test(priority=1) -->Default value is 0
	if the priority is negative then that will execute first
	can be accesed within the class
@Test(dependsOnMethods="packagename.className.MethodName")
	if the first method excutes then it will get Executed
	will skip if the previous method is failed
	can be accessed across the classes
@Test(dependsOnMethods="packagename.className.MethodName", alwaysRun=true) alwaysRun --> default value is false
	If you wnt to run a method eventhought the other methods fails then we can used alwaysRun
@Test(enabled=true) -> default value is true
	It will execute the Testcase if false means it will not execute
	difference between alwaysRun and enabled is enabled will given top priority but
		 if you have enabled=true and dependsOnMethods in same method and the first method is failed then the second method will not execute,
		 if enabled=true, alwaysRun=true,dependsOnMethods then it will execute the second method
		if enabled=false, alwaysRun=true,dependsOnMethods then it will not execute the second method